/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { PrivateDCA, PrivateDCAInterface } from "../PrivateDCA";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "OrderStored",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getOrder",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct PrivateDCA.Order",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getOrderCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "orders",
    outputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "storeOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506103cf806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632520f8b314610051578063793b8c6d14610066578063d8b867531461009d578063edb25841146100d4575b600080fd5b61006461005f366004610337565b61010b565b005b610079610074366004610337565b6101ff565b604080516001600160a01b0390931683526020830191909152015b60405180910390f35b6100c66100ab366004610361565b6001600160a01b031660009081526020819052604090205490565b604051908152602001610094565b6100e76100e2366004610337565b610245565b6040805182516001600160a01b031681526020928301519281019290925201610094565b600081116101605760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60448201526064015b60405180910390fd5b6001600160a01b03808316600081815260208181526040808320815180830183528581528084018881528254600181810185559387529490952090516002909402018054939096166001600160a01b0319909316929092178555915193019290925590517f559913bed3620c5b2bd8e9448d2200234698edb3c598fc1e3a81e132a53d80e5906101f39084815260200190565b60405180910390a25050565b6000602052816000526040600020818154811061021b57600080fd5b6000918252602090912060029091020180546001909101546001600160a01b039091169250905082565b60408051808201909152600080825260208201526001600160a01b03831660009081526020819052604090205482106102b65760405162461bcd60e51b8152602060048201526013602482015272092dcecc2d8d2c840dee4c8cae440d2dcc8caf606b1b6044820152606401610157565b6001600160a01b03831660009081526020819052604090208054839081106102e0576102e0610383565b60009182526020918290206040805180820190915260029092020180546001600160a01b031682526001015491810191909152905092915050565b80356001600160a01b038116811461033257600080fd5b919050565b6000806040838503121561034a57600080fd5b6103538361031b565b946020939093013593505050565b60006020828403121561037357600080fd5b61037c8261031b565b9392505050565b634e487b7160e01b600052603260045260246000fdfea26469706673582212209f61962116ba9beecd32280995c31b2fddb98e4ba5f63adbdbaf30f327ec752664736f6c63430008180033";

type PrivateDCAConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivateDCAConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivateDCA__factory extends ContractFactory {
  constructor(...args: PrivateDCAConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PrivateDCA & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PrivateDCA__factory {
    return super.connect(runner) as PrivateDCA__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivateDCAInterface {
    return new Interface(_abi) as PrivateDCAInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PrivateDCA {
    return new Contract(address, _abi, runner) as unknown as PrivateDCA;
  }
}
